global
	log /dev/log	local0
	log /dev/log	local1 notice
	chroot /var/lib/haproxy
	stats socket /run/haproxy/admin.sock mode 660 level admin expose-fd listeners
	stats timeout 30s
	user haproxy
	group haproxy
	daemon

	# Default SSL material locations
	ca-base /etc/ssl/certs
	crt-base /etc/ssl/private

	# See: https://ssl-config.mozilla.org/#server=haproxy&server-version=2.0.3&config=intermediate
        ssl-default-bind-ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384
        ssl-default-bind-ciphersuites TLS_AES_128_GCM_SHA256:TLS_AES_256_GCM_SHA384:TLS_CHACHA20_POLY1305_SHA256
        ssl-default-bind-options ssl-min-ver TLSv1.2 no-tls-tickets

defaults
	log	global
	mode	http
	option	httplog
	option	dontlognull
        timeout connect 5000
        timeout client  50000
        timeout server  50000
	errorfile 400 /etc/haproxy/errors/400.http
	errorfile 403 /etc/haproxy/errors/403.http
	errorfile 408 /etc/haproxy/errors/408.http
	errorfile 500 /etc/haproxy/errors/500.http
	errorfile 502 /etc/haproxy/errors/502.http
	errorfile 503 /etc/haproxy/errors/503.http
	errorfile 504 /etc/haproxy/errors/504.http

#=====================================================================================
##################################################
#Exl.1

#userlist http-users
#	user igor insecure-password 123456

#frontend my_http_front
#        bind *:80
#        default_backend my_httpd_back

#frontend my_secret_front
#        bind *:8080
#        default_backend my_secret_back


#backend my_httpd_back
#	acl AuthAccept http_auth(http-users)
#	http-request auth realm SeiteLocal if !AuthAccept
#        balance roundrobin                        # circle balancing! in turn!
#        server myweb 172.31.20.250:80   weight 80 # weight 1-255 where 255 = 100% Load on this server
#        server myweb2 172.31.9.94:80    weight 20
#
#backend my_secret_back
#        server mysecretweb 172.31.7.176:80
##################################################
#Exl.2 Распределение после имени домена
#
#frontend fr1 *:80
#	bind 192.168.20.140:80
#	acl url_admin path_beg /admin
#	use_backend be3 if url_admin
#
#	acl url_cloud path_beg /cloud
#	use_backend be2 if url_cloud
#	default_backend be1
#
#backend be1
#	server server1 192.168.20.143:80
#backend be2
#	server server2 192.168.20.142:80
#backend be3
#	server server3 192.168.20.141:80
##################################################
#Exl.3 Распределение по имени домена

frontend fr1 *:80
	bind 192.168.20.140:80
	http-request deny if { src 192.168.30.0/24 }  # Ограничение доступа определенному диапозону сети
	
	acl host_site1 hdr(host) -i site1.local
	acl host_site2 hdr(host) -i site2.local

	use_backend be1 if host_site1
	use_backend be2 if host_site2
	default_backend be3
	
backend be1
	server server1 192.168.20.143:80
backend be2
	server server2 192.168.20.142:80
backend be3
	server server3 192.168.20.141:80
#====================================================================================
